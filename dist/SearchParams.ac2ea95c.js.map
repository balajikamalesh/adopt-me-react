{"version":3,"sources":["Pet.js","Results.js","useDropdown.js","actionCreators/changeTheme.js","actionCreators/changeLocation.js","SearchParams.js"],"names":["name","animal","breed","media","location","id","hero","length","small","pets","map","pet","contact","address","city","state","type","breeds","primary","photos","useDropdown","label","defaultState","options","setstate","replace","toLowerCase","e","target","value","item","chanegTheme","theme","payload","chanegLocation","SearchParams","props","setBreeds","ANIMALS","AnimalDropdown","BreedDropdown","setBreed","setPets","then","breedStrings","console","error","preventDefault","animals","setLocation","setTheme","backgroundColor","mapStatesToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"SearchParams.ac2ea95c.js","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default function ({ name, animal, breed, media, location, id }) {\r\n  let hero = \"http://placecorgi.com/300/300\";\r\n  if (media.length) {\r\n    hero = media[0].small;\r\n  }\r\n\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\n\r\nexport default function ({ pets }) {\r\n  return (\r\n    <div className=\"search\">\r\n      {pets.length === 0 ? (\r\n        <h1>No pets Found</h1>\r\n      ) : (\r\n        pets.map((pet) => {\r\n          const { city, state } = pet.contact.address;\r\n          return (\r\n            <Pet\r\n              key={pet.id}\r\n              id={pet.id}\r\n              name={pet.name}\r\n              animal={pet.type}\r\n              breed={pet.breeds.primary}\r\n              media={pet.photos}\r\n              location={`${city}, ${state}`}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n  const [state, setstate] = useState(defaultState);\r\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\r\n\r\n  const dropdown = () => {\r\n    return (\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <select\r\n          id={id}\r\n          value={state}\r\n          onChange={(e) => setstate(e.target.value)}\r\n          onBlur={(e) => setstate(e.target.value)}\r\n          disabled={!options.length}\r\n        >\r\n          <option>All</option>\r\n          {options.map((item) => {\r\n            return (\r\n              <option key={item} value={item}>\r\n                {item}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </label>\r\n    );\r\n  };\r\n\r\n  return [state, dropdown, setstate];\r\n};\r\n\r\nexport default useDropdown;\r\n","export default function chanegTheme(theme) {\r\n  return { type: \"CHANGE_THEME\", payload: theme };\r\n}\r\n","export default function chanegLocation(location) {\r\n  return { type: \"CHANGE_LOCATION\", payload: location };\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\r\nimport Results from \"./Results\";\r\n\r\nimport useDropdown from \"./useDropdown\";\r\nimport changeTheme from \"./actionCreators/changeTheme\";\r\nimport changeLocation from \"./actionCreators/changeLocation\";\r\n\r\nconst SearchParams = (props) => {\r\n  const [breeds, setBreeds] = useState([]);\r\n  const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\r\n  const [breed, BreedDropdown, setBreed] = useDropdown(\"Breed\", \"\", breeds);\r\n  const [pets, setPets] = useState([]);\r\n\r\n  function requestPets() {\r\n    pet\r\n      .animals({ location: props.location, breed, type: animal })\r\n      .then(({ animals }) => {\r\n        setPets(animals || []);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    //run only after initial render\r\n    setBreeds([]);\r\n    setBreed(\"\");\r\n    pet.breeds(animal).then(({ breeds }) => {\r\n      const breedStrings = breeds.map(({ name }) => name);\r\n      setBreeds(breedStrings);\r\n    }, console.error);\r\n  }, [animal, setBreeds, setBreed]);\r\n\r\n  return (\r\n    <div className=\"search-params\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\">\r\n          location\r\n          <input\r\n            id=\"location\"\r\n            onChange={(e) => props.setLocation(e.target.value)}\r\n            value={props.location}\r\n          />\r\n        </label>\r\n        <AnimalDropdown />\r\n        <BreedDropdown />\r\n        <label>\r\n          Theme\r\n          <select\r\n            value={props.theme}\r\n            onChange={(e) => props.setTheme(e.target.value)}\r\n            onBlur={(e) => props.setTheme(e.target.value)}\r\n          >\r\n            <option></option>\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"mediumorchid\">Medium Orchid</option>\r\n          </select>\r\n        </label>\r\n        <button style={{ backgroundColor: props.theme }}>Submit</button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatesToProps = ({ theme, location }) => {\r\n  theme, location;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setTheme: (theme) => dispatch(changeTheme(theme)),\r\n  setLocation: (location) => dispatch(changeLocation(location)),\r\n});\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(SearchParams);\r\n"]}