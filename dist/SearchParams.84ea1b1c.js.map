{"version":3,"sources":["useDropdown.js","Pet.js","Results.js","actionCreators/changeLocation.js","actionCreators/changeTheme.js","SearchParams.js"],"names":["useDropdown","label","defaultState","options","state","setstate","id","replace","toLowerCase","e","target","value","length","map","item","name","animal","breed","media","location","hero","small","pets","pet","contact","address","city","type","breeds","primary","photos","chanegLocation","payload","chanegTheme","theme","SearchParams","setTheme","updateLocation","updateBreeds","setPets","ANIMALS","AnimalDropdown","BreedDropdown","updateBreed","animals","console","log","then","breedStrings","error","preventDefault","requestPets","backgroundColor","mapStateToProps","mapDispatchToProps","dispatch","setLocation"],"mappings":"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","file":"SearchParams.84ea1b1c.js","sourceRoot":"..\\src","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n  const [state, setstate] = useState(defaultState);\r\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\r\n\r\n  const dropdown = () => {\r\n    return (\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <select\r\n          id={id}\r\n          value={state}\r\n          onChange={(e) => setstate(e.target.value)}\r\n          onBlur={(e) => setstate(e.target.value)}\r\n          disabled={!options.length}\r\n        >\r\n          <option>All</option>\r\n          {options.map((item) => {\r\n            return (\r\n              <option key={item} value={item}>\r\n                {item}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </label>\r\n    );\r\n  };\r\n\r\n  return [state, dropdown, setstate];\r\n};\r\n\r\nexport default useDropdown;\r\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default function ({ name, animal, breed, media, location, id }) {\r\n  let hero = \"http://placecorgi.com/300/300\";\r\n  if (media.length) {\r\n    hero = media[0].small;\r\n  }\r\n\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\n\r\nexport default function ({ pets }) {\r\n  return (\r\n    <div className=\"search\">\r\n      {pets.length === 0 ? (\r\n        <h1>No pets Found</h1>\r\n      ) : (\r\n        pets.map((pet) => {\r\n          const { city, state } = pet.contact.address;\r\n          return (\r\n            <Pet\r\n              key={pet.id}\r\n              id={pet.id}\r\n              name={pet.name}\r\n              animal={pet.type}\r\n              breed={pet.breeds.primary}\r\n              media={pet.photos}\r\n              location={`${city}, ${state}`}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default function chanegLocation(location) {\r\n  return { type: \"CHANGE_LOCATION\", payload: location };\r\n}\r\n","export default function chanegTheme(theme) {\r\n  return { type: \"CHANGE_THEME\", payload: theme };\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\r\nimport { connect } from \"react-redux\";\r\nimport useDropdown from \"./useDropdown\";\r\nimport Results from \"./Results\";\r\nimport changeLocation from \"./actionCreators/changeLocation\";\r\nimport changeTheme from \"./actionCreators/changeTheme\";\r\n\r\nconst SearchParams = ({ theme, location, setTheme, updateLocation }) => {\r\n  const [breeds, updateBreeds] = useState([]);\r\n  const [pets, setPets] = useState([]);\r\n  const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\r\n  const [breed, BreedDropdown, updateBreed] = useDropdown(\"Breed\", \"\", breeds);\r\n\r\n  async function requestPets() {\r\n    const { animals } = await pet.animals({\r\n      location,\r\n      breed,\r\n      type: animal,\r\n    });\r\n\r\n    console.log(\"animals\", animals);\r\n\r\n    setPets(animals || []);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateBreeds([]);\r\n    updateBreed(\"\");\r\n\r\n    pet.breeds(animal).then(({ breeds }) => {\r\n      const breedStrings = breeds.map(({ name }) => name);\r\n      updateBreeds(breedStrings);\r\n    }, console.error);\r\n  }, [animal]);\r\n\r\n  return (\r\n    <div className=\"search-params\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\">\r\n          Location\r\n          <input\r\n            id=\"location\"\r\n            value={location}\r\n            placeholder=\"Location\"\r\n            onChange={(e) => updateLocation(e.target.value)}\r\n          />\r\n        </label>\r\n        <AnimalDropdown />\r\n        <BreedDropdown />\r\n        <label htmlFor=\"location\">\r\n          Theme\r\n          <select\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n            <option value=\"mediumorchid\">Medium Orchid</option>\r\n          </select>\r\n        </label>\r\n        <button style={{ backgroundColor: theme }}>Submit</button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, location }) => ({\r\n  theme,\r\n  location,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLocation(location) {\r\n    dispatch(changeLocation(location));\r\n  },\r\n  setTheme(theme) {\r\n    dispatch(changeTheme(theme));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchParams);\r\n"]}